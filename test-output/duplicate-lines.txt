
ERROR: reduce duplicate lines
    Clone found (python):
     - file5.py [2:1 - 942:18] (940 lines, 4044 tokens)
       file6.py [2:1 - 942:18]
    Clone found (python):
     - file4.py [2:1 - 942:18] (940 lines, 4044 tokens)
       file6.py [2:1 - 942:18]
    Clone found (python):
     - file2.py [135:15 - 176:4] (41 lines, 410 tokens)
       file2.py [87:14 - 128:7]
    Clone found (python):
     - file2.py [176:8 - 253:15] (77 lines, 1028 tokens)
       file2.py [10:7 - 87:14]
    Clone found (python):
     - file2.py [253:15 - 294:8] (41 lines, 412 tokens)
       file2.py [87:14 - 176:8]
    Clone found (python):
     - file2.py [294:8 - 371:7] (77 lines, 1026 tokens)
       file2.py [10:7 - 87:4]
    Clone found (python):
     - file1.py [17:1 - 58:7] (41 lines, 415 tokens)
       file2.py [87:1 - 176:8]
    Clone found (python):
     - file1.py [58:1 - 135:15] (77 lines, 1031 tokens)
       file2.py [10:1 - 87:14]
    Clone found (python):
     - file1.py [135:1 - 861:4] (726 lines, 5820 tokens)
       file2.py [135:1 - 861:4]


ERROR: reduce Python + JS code to 30000 chars
    Size 44985 > 30000 (minified). Largest files:
    9749      file2.py
    9742      file1.py
    6609      file3.py
    6295      file4.py
    6295      file5.py
    6295      file6.py


WARNING: fix flake8 extra checks
    file1.py:58:22: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file1.py:58:31: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file1.py:176:23: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file1.py:176:32: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file1.py:294:23: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file1.py:294:32: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file2.py:10:22: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file2.py:10:31: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file2.py:176:23: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file2.py:176:32: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file2.py:294:23: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file2.py:294:32: B006 Do not use mutable data structures for argument defaults.  They are created during function definition time. All calls to the function reuse this one instance of that data structure, persisting changes between them.
    file3.py:59:1: SIM120 Use 'class HTTPClient:' instead of 'class HTTPClient(object):'
    file3.py:297:13: SIM102 Use a single if-statement instead of nested if-statements
    file3.py:336:1: SIM120 Use 'class HTTPRequest:' instead of 'class HTTPRequest(object):'
    file3.py:344:17: C408 Unnecessary dict call - rewrite as a literal.
    file3.py:567:1: SIM120 Use 'class HTTPResponse:' instead of 'class HTTPResponse(object):'
    file3.py:725:1: SIM120 Use 'class _RequestProxy:' instead of 'class _RequestProxy(object):'
    file4.py:164:27: C408 Unnecessary dict call - rewrite as a literal.
    file4.py:799:9: SIM105 Use 'contextlib.suppress(OSError)'
    file4.py:808:1: SIM120 Use 'class _Timeout:' instead of 'class _Timeout(object):'
    file4.py:837:1: SIM120 Use 'class PeriodicCallback:' instead of 'class PeriodicCallback(object):'
    file5.py:164:27: C408 Unnecessary dict call - rewrite as a literal.
    file5.py:799:9: SIM105 Use 'contextlib.suppress(OSError)'
    file5.py:808:1: SIM120 Use 'class _Timeout:' instead of 'class _Timeout(object):'
    file5.py:837:1: SIM120 Use 'class PeriodicCallback:' instead of 'class PeriodicCallback(object):'
    file6.py:164:27: C408 Unnecessary dict call - rewrite as a literal.
    file6.py:799:9: SIM105 Use 'contextlib.suppress(OSError)'
    file6.py:808:1: SIM120 Use 'class _Timeout:' instead of 'class _Timeout(object):'
    file6.py:837:1: SIM120 Use 'class PeriodicCallback:' instead of 'class PeriodicCallback(object):'

---------------------------------------------------------------------
BUILD FAILED.
To fix, see https://code.gramener.com/cto/builderrors or mail cto@gramener.com
